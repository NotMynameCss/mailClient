# k·∫øt n·ªëi CSDL
import dbConnector as dbconnect
# d√πng cho g·ª≠i email
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
# d√πng cho nh·∫≠n email
import imaplib
import email


##################################################### code chung

# Th√¥ng tin Gmail
EMAIL_SENDER = "modpackphieuluu@gmail.com"
APP_PASSWORD = "gxqp sfjo ptem yyln"



# H√†m l∆∞u email v√†o MySQL
def save_email(sender, receiver, subject, body):
    try:
        conn = dbconnect.connect_db()
        cursor = conn.cursor()

        # Kiem tra email da co trong DB chua
        if not is_email_exists(cursor, subject, sender):
            
            sql = "INSERT INTO emails (sender, receiver, subject, body) VALUES (%s, %s, %s, %s)"
            cursor.execute(sql, (sender, receiver, subject, body))
            conn.commit()
            print("‚úÖ Email ƒë√£ l∆∞u v√†o MySQL!")
        else:
            print("‚ùå Email n√†y ƒë√£ t·ªìn t·∫°i trong c∆° s·ªü d·ªØ li·ªáu!")

        conn.close()
        

    except Exception as e:
        print(f"‚ùå L·ªói l∆∞u email v√†o MySQL: {e}")

##################################################### X·ª≠ l√Ω ch·ª©c nƒÉng l∆∞u mail ƒë√£ g·ª≠i v√†o DB

# H√†m g·ª≠i email + l∆∞u v√†o MySQL
def send_email(to_email, subject, body):
    try:
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.starttls()
        server.login(EMAIL_SENDER, APP_PASSWORD)

        msg = MIMEMultipart()
        msg["From"] = EMAIL_SENDER
        msg["To"] = to_email
        msg["Subject"] = subject
        msg.attach(MIMEText(body, "plain"))

        server.sendmail(EMAIL_SENDER, to_email, msg.as_string())
        server.quit()

        print("‚úÖ Email ƒë√£ g·ª≠i th√†nh c√¥ng!")

        # L∆∞u v√†o MySQL
        save_email(EMAIL_SENDER, to_email, subject, body)

    except Exception as e:
        print(f"‚ùå L·ªói g·ª≠i email: {e}")

# G·ª≠i email test
# send_email("receiver_email@gmail.com", "Test Subject", "N·ªôi dung email test")


##################################################### X·ª≠ l√Ω ch·ª©c nƒÉng l∆∞u mail ƒë√£ nh·∫≠n v√†o DB

# h√†m check email c√≥ l·∫∑p l·∫°i kh√¥ng? n·∫øu c√≥ th√¨ b·ªè qua email ƒë√£ c√≥
def is_email_exists(cursor, subject, sender):
    sql = "SELECT COUNT(*) FROM emails WHERE subject = %s AND sender = %s"
    cursor.execute(sql, (subject, sender))
    return cursor.fetchone()[0] > 0

# L·∫•y n·ªôi dung email t·ª´ message
def extract_body(msg):
    """L·∫•y n·ªôi dung email t·ª´ ƒë·ªëi t∆∞·ª£ng message"""
    body = ""
    if msg.is_multipart():
        for part in msg.walk():
            if part.get_content_type() == "text/plain":
                body = part.get_payload(decode=True).decode()
    else:
        body = msg.get_payload(decode=True).decode()
    return body

# h√†m nh·∫≠n mail t·ª´ gmail v√† l∆∞u v√†o MySQL
def fetch_emails():
    try:
        mail = imaplib.IMAP4_SSL("imap.gmail.com", 993)
        mail.login(EMAIL_SENDER, APP_PASSWORD)
        mail.select("INBOX")

        result, email_data = mail.search(None, "ALL")
        email_ids = email_data[0].split()

        print(f"üì© T√¨m th·∫•y {len(email_ids)} email.")

        for email_id in email_ids[-5:]: # 5 mail m·ªõi nh·∫•t
            result, email_data = mail.fetch(email_id, "(RFC822)")
            raw_email = email_data[0][1]
            

            msg = email.message_from_bytes(raw_email)
            sender = msg["From"]
            subject = msg["Subject"]
            body = extract_body(msg)
            
            # L∆∞u email v√†o MySQL
            save_email(sender, EMAIL_SENDER, subject, body)

        mail.logout()
    except Exception as e:
        print(f"‚ùå L·ªói nh·∫≠n email: {e}")

# Ch·∫°y th·ª≠ nh·∫≠n email
fetch_emails()